name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Pixi
      uses: prefix-dev/setup-pixi@v0.9.0
      with:
        pixi-version: v0.55.0
        cache: true

    - name: Run tests
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        REDIS_DB: 1
      run: |
        pixi run test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  docker-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker-compose -f docker-compose.yaml build --no-cache

    - name: Start services
      run: |
        docker-compose -f docker-compose.yaml up -d
        sleep 15  # Give services time to start

    - name: Check service health
      run: |
        # Wait for the service to be ready
        timeout 60 bash -c 'until curl -f http://localhost:8888/health; do sleep 2; done'

    - name: Run integration tests
      run: |
        # Test health endpoint
        curl -f http://localhost:8888/health

        # Test analyzers endpoint
        curl -f http://localhost:8888/analyzers

    - name: Check logs
      if: failure()
      run: |
        docker-compose -f docker-compose.yaml logs

    - name: Stop services
      if: always()
      run: |
        docker-compose -f docker-compose.yaml down -v

  security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Set up Pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.29.0
        cache: true

    - name: Install security scanning tools
      run: |
        pixi add bandit safety

    - name: Run bandit security scan
      run: |
        pixi run bandit -r src/ -f json -o bandit-report.json || true
        pixi run bandit -r src/

    - name: Run safety check
      run: |
        pixi run safety check --json --output safety-report.json || true
        pixi run safety check

    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
